{"version":3,"sources":["components/helpers.js","redux/reducers/items.js","redux/reducers/filterBy.js","redux/reducers/sorting.js","redux/reducers/index.js","redux/store.js","redux/actions.js","components/AddItem.js","components/SelectFilter.js","components/Filter.js","components/Item.js","components/List.js","components/Table.js","App.js","index.js"],"names":["SampleData","id","date","name","category","price","Months","items","state","action","type","object","filter","item","filterBy","text","sorting","column","direction","combineReducers","store","createStore","rootReducer","composeWithDevTools","nextItemId","length","sortColumn","connect","dispatch","useState","currentItem","setCurrentItem","className","onSubmit","e","preventDefault","onChange","target","value","newItem","toLowerCase","htmlFor","placeholder","required","step","min","aria-label","SelectFilter","categories","handleChange","map","index","key","getCategories","val","i","indexOf","selection","Item","onClick","fullDate","str","day","substring","month","parseInt","year","getFullDate","Button","variant","size","color","startIcon","Delete","deleteItem","Sort","SortByAlpha","getList","sort","list","a","b","reverse","List","App","Filter","Table","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d8df9bc4.chunk.js","sourcesContent":["export const SampleData = [\r\n    {\r\n        id: 0,\r\n        date: '2019-11-02',\r\n        name: 'groceries',\r\n        category: 'food',\r\n        price: 200.00,\r\n    },\r\n    {   \r\n        id: 1,\r\n        date: '2019-11-08',\r\n        name: 'monthly rent',\r\n        category: 'housing',\r\n        price: 1000.00,\r\n    },\r\n    {   \r\n        id: 2,\r\n        date: '2019-11-22',\r\n        name: 'spotify',\r\n        category: 'subscriptions',\r\n        price: 9.99,\r\n    }\r\n] \r\n\r\nexport const Months = [\r\n    '',\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n]","import { SampleData } from '../../components/helpers';\r\n\r\nconst items = (state = SampleData, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      return [\r\n        // makes a copy of the state and adds new object!\r\n        ...state,\r\n        action.object \r\n      ]\r\n    case 'DELETE_ITEM':\r\n      return [...state].filter((item) => item.id !== action.id); \r\n    default:\r\n      // returns the state unchanged\r\n      return state\r\n  }\r\n}\r\n\r\nexport default items","const filterBy = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case 'SET_FILTER':\r\n      return action.text\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default filterBy"," const sorting = (state = {column: \"date\", direction: true}, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'SORT_COLUMN':  \r\n      return { column: action.text, direction: !state.direction } \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default sorting","import { combineReducers } from 'redux';\r\nimport items from './items'; \r\nimport filterBy from './filterBy';\r\nimport sorting from './sorting';\r\n\r\nexport default combineReducers({\r\n  items,  \r\n  filterBy,\r\n  sorting\r\n})","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","\r\nimport { SampleData } from '../components/helpers';\r\nlet nextItemId = SampleData.length\r\n\r\nconst ADD_ITEM = 'ADD_ITEM'\r\nconst DELETE_ITEM = 'DELETE_ITEM' \r\nconst SET_FILTER = 'SET_FILTER'\r\nconst SORT_COLUMN = 'SORT_COLUMN'\r\n\r\n// Action creators\r\nexport const addItem = object => ({ \r\n    type: ADD_ITEM, \r\n    id: nextItemId++,\r\n    object\r\n})\r\n\r\nexport const deleteItem = id => ({\r\n  type: DELETE_ITEM, \r\n  id\r\n})\r\n\r\nexport const sortColumn = text => ({\r\n  type:  SORT_COLUMN,\r\n  text\r\n})\r\n\r\nexport const setFilter = text => ({\r\n  type: SET_FILTER, \r\n  text\r\n})","import React, { useState } from 'react';  \r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../redux/actions';  \r\n\r\nconst AddItem = ({ dispatch }) => {\r\n  const [currentItem, setCurrentItem] = useState({}); \r\n  // Keeps track of user's input, saving the input to its corresponding property in the list item object\r\n  const handleUserInput = (e) => {\r\n    const { id, value } = e.target;\r\n    let newItem = { ...currentItem };\r\n    newItem[id] = value.toLowerCase();\r\n    setCurrentItem(newItem);\r\n  }  \r\n\r\n  return (\r\n    <form \r\n      action=\"\" \r\n      className=\"inputForm\" \r\n      onSubmit={(e) => {\r\n        e.preventDefault(); \r\n        dispatch(addItem(currentItem));\r\n        setCurrentItem({});\r\n      }} \r\n      onChange={handleUserInput}\r\n    >\r\n      <div>\r\n        <label htmlFor=\"name\">Item</label>\r\n        <input type=\"text\" id=\"name\" value={currentItem.name} placeholder=\"Rent\" required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"category\">Category</label>\r\n        <input type=\"text\" id=\"category\" value={currentItem.text} placeholder=\"Housing\" required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"price\">Price</label>\r\n        <input type=\"number\" step=\"0.01\" min=\"0\" id=\"price\" value={currentItem.price}placeholder=\"1000.00\" required />\r\n      </div> \r\n      <div>\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input type=\"date\" id=\"date\" value={currentItem.date} required /> \r\n      </div>\r\n      <button className=\"add\" type=\"submit\" aria-label=\"add item\">\r\n        +\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default connect()(AddItem)","import React from 'react'; \r\n\r\nconst SelectFilter = ({ categories, handleChange }) => (\r\n  <form action=\"\" onChange={(e) => handleChange(e.target.value)} className=\"filterSelect\">\r\n    <label htmlFor=\"filter\">Show</label>\r\n    <select name=\"filter\" id=\"filter\">\r\n      <option value=\"\">All</option>\r\n      {categories.map((category, index) => {\r\n        return (\r\n          <option\r\n            key={index}\r\n            value={category}>{category}</option>\r\n        )\r\n      })}\r\n    </select>\r\n  </form>\r\n) \r\n\r\nexport default SelectFilter","import { connect } from 'react-redux';\r\nimport { setFilter } from '../redux/actions'; \r\nimport SelectFilter from './SelectFilter';\r\n\r\nconst getCategories = (state) => { \r\n  let categories = state.map(item => item.category)\r\n  return categories.filter((val, i) => categories.indexOf(val) === i)   \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categories: getCategories(state.items)\r\n}) \r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleChange: (selection) => dispatch(setFilter(selection))\r\n}) \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectFilter)","import React from 'react';  \r\nimport { Months } from './helpers';\r\nimport { Button } from '@material-ui/core'; \r\nimport { Delete } from '@material-ui/icons';\r\n\r\nconst Item = ({ onClick, date, name, category, price }) => {\r\n    const getFullDate = (str) => {\r\n        const day = str.substring(8, 10);\r\n        const month = Months[parseInt(str.substring(5, 7))];\r\n        const year = str.substring(0, 4) \r\n        return `${month} ${day} ${year}`;\r\n    }\r\n\r\n    const fullDate = getFullDate(date);\r\n\r\n    return (\r\n        <tr>\r\n            <td>{fullDate}</td>\r\n            <td>{name}</td>\r\n            <td className=\"category\">\r\n                <span>{category}</span>\r\n            </td>\r\n            <td className=\"price\">${price}</td>\r\n            <td>\r\n                <Button \r\n                variant=\"outlined\" \r\n                size=\"small\" \r\n                color=\"secondary\"\r\n                aria-label=\"Delete item\" \r\n                onClick={onClick} \r\n                startIcon={<Delete />}> \r\n                    Delete\r\n                </Button>\r\n            </td>\r\n        </tr> \r\n    )\r\n}\r\n\r\nexport default Item","import React from 'react'; \r\nimport { connect } from 'react-redux';\r\nimport { sortColumn } from '../redux/actions';\r\nimport Item from './Item';\r\nimport { Sort, SortByAlpha } from '@material-ui/icons';\r\n\r\nconst List = ({ items, deleteItem, dispatch }) => ( \r\n    <table>\r\n        <thead>\r\n            <tr className=\"tableHeadings\">\r\n                <th onClick={() => dispatch(sortColumn(\"date\"))}>\r\n                    Date\r\n                    <Sort /> \r\n                </th>\r\n                <th onClick={() => dispatch(sortColumn(\"name\"))}>\r\n                    Item \r\n                    <SortByAlpha /> \r\n                </th>\r\n                <th onClick={() => dispatch(sortColumn(\"category\"))}>\r\n                    Category\r\n                    <SortByAlpha />\r\n                </th>\r\n                <th onClick={() => dispatch(sortColumn(\"price\"))}>\r\n                    Total\r\n                    <Sort />\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>  \r\n            {items.map((item) => { \r\n                return (\r\n                    <Item \r\n                        key={item.id}\r\n                        {...item} \r\n                        onClick={() => deleteItem(item.id)}\r\n                    />\r\n                ) \r\n            })} \r\n        </tbody>\r\n    </table>  \r\n)\r\n\r\nexport default connect()(List)","import { connect } from 'react-redux';\r\nimport { deleteItem } from '../redux/actions.js';\r\nimport List from './List';\r\n\r\nconst getList = (items, filter, sort) => { \r\n  let list = [...items].sort((a, b) => {\r\n      if (b[sort.column] > a[sort.column]) {\r\n            return 1;\r\n      } else if (b[sort.column] < a[sort.column]) {\r\n          return -1;\r\n      }\r\n      return 0;\r\n  });\r\n  if (sort.direction) {\r\n    list.reverse();\r\n  }\r\n\r\n  if (filter !== \"\") { \r\n    return list.filter(item => filter === item.category);\r\n  } else { \r\n    return list;\r\n  } \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: getList(state.items, state.filterBy, state.sorting)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteItem: id => dispatch(deleteItem(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React from 'react';  \r\nimport AddItem from './components/AddItem';\r\nimport Filter from './components/Filter';\r\nimport Table from './components/Table';  \r\nimport './App.css'; \r\n\r\nconst App = () => {      \r\n  return (\r\n  <>\r\n    <header> \r\n      <h1>Personal Spending Tracker</h1>\r\n    </header>\r\n    <main> \r\n      <section>\r\n        <AddItem />\r\n        <Filter />\r\n        <Table />\r\n      </section>\r\n    </main>\r\n  </>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport App from './App'\r\nimport './index.css';\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n)\r\n"],"sourceRoot":""}