{"version":3,"sources":["components/helpers.js","redux/reducers/items.js","redux/reducers/filterBy.js","redux/reducers/sorting.js","redux/reducers/currentItem.js","redux/reducers/index.js","redux/store.js","redux/actions.js","components/AddItem.js","components/SelectFilter.js","containers/Filter.js","components/Item.js","components/Table.js","containers/List.js","App.js","index.js"],"names":["SampleData","id","date","name","category","price","items","state","action","type","object","filter","item","filterBy","text","sorting","column","direction","currentItem","field","val","toLowerCase","combineReducers","store","createStore","rootReducer","composeWithDevTools","nextItemId","length","setCurrentItem","sortColumn","connect","dispatch","handleUserInput","e","target","value","className","onSubmit","preventDefault","console","log","htmlFor","onChange","placeholder","required","step","min","aria-label","SelectFilter","categories","handleChange","map","index","key","getCategories","i","indexOf","selection","Item","onClick","Button","variant","size","color","startIcon","Delete","deleteItem","Sort","SortByAlpha","getList","sort","list","a","b","reverse","Table","App","Filter","List","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e6dcb217.chunk.js","sourcesContent":["export const SampleData = [\r\n    {\r\n        id: 0,\r\n        date: '2019-11-02',\r\n        name: 'groceries',\r\n        category: 'food',\r\n        price: 200.00,\r\n    },\r\n    {   \r\n        id: 1,\r\n        date: '2019-11-08',\r\n        name: 'monthly rent',\r\n        category: 'housing',\r\n        price: 1000.00,\r\n    },\r\n    {   \r\n        id: 2,\r\n        date: '2019-11-22',\r\n        name: 'spotify',\r\n        category: 'subscriptions',\r\n        price: 9.99,\r\n    }\r\n] \r\n\r\nexport const Months = [\r\n    '',\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n]","import { SampleData } from '../../components/helpers';\r\n\r\nconst items = (state = SampleData, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      return [\r\n        // makes a copy of the state and adds new object!\r\n        ...state,\r\n        action.object \r\n      ]\r\n    case 'DELETE_ITEM':\r\n      return [...state].filter((item) => item.id !== action.id); \r\n    default:\r\n      // returns the state unchanged\r\n      return state\r\n  }\r\n}\r\n\r\nexport default items","const filterBy = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case 'SET_FILTER':\r\n      return action.text\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default filterBy"," const sorting = (state = {column: \"date\", direction: true}, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'SORT_COLUMN':  \r\n      return { column: action.text, direction: !state.direction } \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default sorting","const currentItem  = (state = {}, action) => { \r\n  switch (action.type) {\r\n    case 'SET_CURRENT_ITEM':  \r\n      let currentItem = { ...state }; \r\n      currentItem[action.object.field] = action.object.val.toLowerCase();\r\n      return currentItem; \r\n    case 'ADD_ITEM':  \r\n      return { name: \"\", category: \"\", price: 0, date: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default currentItem;","import { combineReducers } from 'redux';\r\nimport items from './items'; \r\nimport filterBy from './filterBy';\r\nimport sorting from './sorting';\r\nimport currentItem from './currentItem';\r\n\r\nexport default combineReducers({\r\n  items,  \r\n  filterBy,\r\n  sorting,\r\n  currentItem\r\n})","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","\r\nimport { SampleData } from '../components/helpers';\r\nlet nextItemId = SampleData.length\r\n\r\nconst ADD_ITEM = 'ADD_ITEM'\r\nconst DELETE_ITEM = 'DELETE_ITEM' \r\nconst SET_CURRENT_ITEM = 'SET_CURRENT_ITEM'\r\nconst SET_FILTER = 'SET_FILTER'\r\nconst SORT_COLUMN = 'SORT_COLUMN'\r\n\r\n// Action creators\r\nexport const addItem = object => ({ \r\n    type: ADD_ITEM, \r\n    id: nextItemId++,\r\n    object\r\n})\r\n\r\nexport const deleteItem = id => ({\r\n  type: DELETE_ITEM, \r\n  id\r\n})\r\n\r\nexport const setCurrentItem = object => ({\r\n  type: SET_CURRENT_ITEM, \r\n  object\r\n})\r\n\r\nexport const sortColumn = text => ({\r\n  type:  SORT_COLUMN,\r\n  text\r\n})\r\n\r\nexport const setFilter = text => ({\r\n  type: SET_FILTER, \r\n  text\r\n})","import React from 'react';  \r\nimport { connect } from 'react-redux';\r\nimport { addItem, setCurrentItem } from '../redux/actions';  \r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentItem: setCurrentItem(state.currentItem)\r\n}) \r\n\r\nconst AddItem = ({ dispatch, currentItem }) => { \r\n   // Keeps track of user's input, saving the input to its corresponding property in the list item object\r\n  const handleUserInput = (e) => {\r\n    const { id, value } = e.target;  \r\n    dispatch(setCurrentItem({ field: id, val: value }));\r\n  }   \r\n\r\n  const {name, category, price, date} = currentItem.object;  \r\n  return (\r\n    <form \r\n      action=\"\" \r\n      className=\"inputForm\" \r\n      onSubmit={(e) => {\r\n        e.preventDefault();  \r\n        dispatch(addItem(currentItem.object));  \r\n        console.log(\"submitted\")\r\n      }} \r\n    >  \r\n      <div>\r\n        <label htmlFor=\"name\">Item</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"name\" \r\n          value={name} \r\n          onChange={handleUserInput}\r\n          placeholder=\"Rent\" \r\n          required={true}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"category\">Category</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"category\" \r\n          value={category} \r\n          onChange={handleUserInput}\r\n          placeholder=\"Housing\" \r\n          required={true}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"price\">Price</label>\r\n        <input \r\n          type=\"number\" \r\n          step=\"0.01\" \r\n          min=\"0\" \r\n          id=\"price\" \r\n          value={price}\r\n          onChange={handleUserInput}\r\n          placeholder=\"1000.00\" \r\n          required={true}\r\n        />\r\n      </div> \r\n      <div>\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input \r\n          type=\"date\" \r\n          id=\"date\" \r\n          onChange={handleUserInput}\r\n          value={date} \r\n          required={true}\r\n        /> \r\n      </div>\r\n      <button className=\"add\" type=\"submit\" aria-label=\"add item\">\r\n        +\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddItem)","import React from 'react'; \r\n\r\nconst SelectFilter = ({ categories, handleChange }) => (\r\n  <form action=\"\" onChange={(e) => handleChange(e.target.value)} className=\"filterSelect\">\r\n    <label htmlFor=\"filter\">Show</label>\r\n    <select name=\"filter\" id=\"filter\">\r\n      <option value=\"\">All</option>\r\n      {categories.map((category, index) => {\r\n        return (\r\n          <option\r\n            key={index}\r\n            value={category}>{category}</option>\r\n        )\r\n      })}\r\n    </select>\r\n  </form>\r\n) \r\n\r\nexport default SelectFilter","import { connect } from 'react-redux';\r\nimport { setFilter } from '../redux/actions'; \r\nimport SelectFilter from '../components/SelectFilter';\r\n\r\nconst getCategories = (state) => { \r\n  let categories = state.map(item => item.category)\r\n  return categories.filter((val, i) => categories.indexOf(val) === i)   \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categories: getCategories(state.items)\r\n}) \r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleChange: (selection) => dispatch(setFilter(selection))\r\n}) \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectFilter)","import React from 'react';  \r\nimport { Button } from '@material-ui/core'; \r\nimport { Delete } from '@material-ui/icons';\r\n\r\nconst Item = ({ onClick, date, name, category, price }) => (\r\n    <tr>\r\n        <td>{date}</td>\r\n        <td>{name}</td>\r\n        <td className=\"category\">\r\n            <span>{category}</span>\r\n        </td>\r\n        <td className=\"price\">${price}</td>\r\n        <td>\r\n            <Button \r\n            variant=\"outlined\" \r\n            size=\"small\" \r\n            color=\"secondary\"\r\n            aria-label=\"Delete item\" \r\n            onClick={onClick} \r\n            startIcon={<Delete />}> \r\n                Delete\r\n            </Button>\r\n        </td>\r\n    </tr> \r\n)\r\n\r\nexport default Item","import React from 'react'; \r\nimport { connect } from 'react-redux';\r\nimport { sortColumn } from '../redux/actions';\r\nimport Item from './Item';\r\nimport { Sort, SortByAlpha } from '@material-ui/icons';\r\n\r\nconst Table = ({ items, deleteItem, dispatch }) => ( \r\n    <table>\r\n        <caption>Transaction History</caption>\r\n        <thead>\r\n            <tr className=\"tableHeadings\">\r\n                <th onClick={() => dispatch(sortColumn(\"date\"))}>\r\n                    Date\r\n                    <Sort /> \r\n                </th>\r\n                <th onClick={() => dispatch(sortColumn(\"name\"))}>\r\n                    Item \r\n                    <SortByAlpha /> \r\n                </th>\r\n                <th onClick={() => dispatch(sortColumn(\"category\"))}>\r\n                    Category\r\n                    <SortByAlpha />\r\n                </th>\r\n                <th onClick={() => dispatch(sortColumn(\"price\"))}>\r\n                    Total\r\n                    <Sort />\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>  \r\n            {items.map((item) => { \r\n                return (\r\n                    <Item \r\n                        key={item.id}\r\n                        {...item} \r\n                        onClick={() => deleteItem(item.id)}\r\n                    />\r\n                ) \r\n            })} \r\n        </tbody>\r\n    </table>  \r\n)\r\n\r\nexport default connect()(Table)","import { connect } from 'react-redux';\r\nimport { deleteItem } from '../redux/actions.js';\r\nimport Table from '../components/Table';\r\n\r\nconst getList = (items, filter, sort) => { \r\n  let list = [...items].sort((a, b) => {\r\n      if (b[sort.column] > a[sort.column]) {\r\n            return 1;\r\n      } else if (b[sort.column] < a[sort.column]) {\r\n          return -1;\r\n      }\r\n      return 0;\r\n  });\r\n  if (sort.direction) {\r\n    list.reverse();\r\n  }\r\n\r\n  if (filter !== \"\") { \r\n    return list.filter(item => filter === item.category);\r\n  } else { \r\n    return list;\r\n  } \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: getList(state.items, state.filterBy, state.sorting)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteItem: id => dispatch(deleteItem(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","import React from 'react';  \r\nimport AddItem from './components/AddItem';\r\nimport Filter from './containers/Filter';\r\nimport List from './containers/List';  \r\nimport './App.css'; \r\n\r\nconst App = () => {      \r\n  return (\r\n  <>\r\n    <header> \r\n      <h1>Personal Spending Tracker</h1>\r\n    </header>\r\n    <main> \r\n      <section>\r\n        <AddItem />\r\n        <Filter />\r\n        <List />\r\n      </section>\r\n    </main>\r\n  </>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport App from './App'\r\nimport './index.css';\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n)\r\n"],"sourceRoot":""}