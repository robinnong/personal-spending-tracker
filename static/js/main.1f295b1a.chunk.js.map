{"version":3,"sources":["components/helpers.js","redux/reducers/items.js","redux/reducers/filterBy.js","redux/reducers/sorting.js","redux/reducers/currentItem.js","redux/reducers/index.js","redux/store.js","redux/actions.js","components/AddItem.js","components/SelectFilter.js","containers/Filter.js","components/Item.js","components/Table.js","containers/List.js","components/Balance.js","App.js","index.js"],"names":["SampleData","type","id","date","name","category","price","items","state","action","item","object","multiplier","parseFloat","filter","filterBy","text","sorting","column","direction","currentItem","field","val","toLowerCase","combineReducers","store","createStore","rootReducer","composeWithDevTools","nextItemId","length","connect","current","dispatch","className","onSubmit","e","preventDefault","onChange","target","value","htmlFor","required","placeholder","step","min","aria-label","SelectFilter","categories","sort","map","index","key","getCategories","i","indexOf","selection","Item","onClick","Math","abs","Delete","deleteItem","getList","list","a","b","reverse","Table","total","data","reduce","App","Filter","List","rootElement","document","getElementById","ReactDOM","render"],"mappings":"yTAAaA,EAAa,CACtB,CACIC,KAAM,UACNC,GAAI,EACJC,KAAM,aACNC,KAAM,YACNC,SAAU,OACVC,OAAQ,KAEZ,CACIL,KAAM,UACNC,GAAI,EACJC,KAAM,aACNC,KAAM,eACNC,SAAU,UACVC,OAAQ,KAEZ,CACIL,KAAM,UACNC,GAAI,EACJC,KAAM,aACNC,KAAM,UACNC,SAAU,gBACVC,OAAQ,OCFDC,EAnBD,WAAiC,IAAhCC,EAA+B,uDAAvBR,EAAYS,EAAW,uCAC5C,OAAQA,EAAOR,MACb,IAAK,WACH,IAAMS,EAAI,eAAQD,EAAOE,QACnBC,EAA2B,WAAdF,EAAKT,KAAoB,GAAK,EAEjD,OADAS,EAAKJ,MAAQO,WAAWH,EAAKJ,OAAOM,EAC9B,GAAN,mBAEKJ,GAFL,CAGEE,IAEJ,IAAK,cACH,OAAO,YAAIF,GAAOM,QAAO,SAACJ,GAAD,OAAUA,EAAKR,KAAOO,EAAOP,MACxD,QAEE,OAAOM,ICREO,EATE,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIC,EAAW,uCACvC,OAAQA,EAAOR,MACb,IAAK,aACH,OAAOQ,EAAOO,KAChB,QACE,OAAOR,ICOES,EAZE,WAAyD,IAAxDT,EAAuD,uDAA/C,CAACU,OAAQ,OAAQC,WAAW,GAAQV,EAAW,uCAEvE,OAAQA,EAAOR,MACb,IAAK,cACH,MAAwB,aAAhBQ,EAAOO,MAAuC,SAAhBP,EAAOO,KACzC,CAAEE,OAAQT,EAAOO,KAAMG,WAAW,GAClC,CAAED,OAAQT,EAAOO,KAAMG,WAAW,GACxC,QACE,OAAOX,ICKEY,EAbM,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOR,MACb,IAAK,mBACH,IAAImB,EAAW,eAAQZ,GAEvB,OADAY,EAAYX,EAAOE,OAAOU,OAASZ,EAAOE,OAAOW,IAAIC,cAC9CH,EACT,IAAK,WACH,MAAO,CAAEhB,KAAM,GAAIC,SAAU,GAAIC,MAAO,EAAGH,KAAM,IACnD,QACE,OAAOK,ICHEgB,4BAAgB,CAC7BjB,QACAQ,WACAE,UACAG,gBCJaK,EAFDC,sBAAYC,EAAaC,iCCFnCC,EAAa7B,EAAW8B,OCgFbC,eA9ES,SAACvB,GAAD,MAAY,CAAEwB,QAASxB,EAAMY,eA8EtCW,EA5EC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAMlBhC,EAAsC+B,EAAtC/B,KAAMG,EAAgC4B,EAAhC5B,KAAMC,EAA0B2B,EAA1B3B,SAAUC,EAAgB0B,EAAhB1B,MAAOH,EAAS6B,EAAT7B,KAErC,OACE,0BACEM,OAAO,GACPyB,UAAU,YACVC,SAAU,SAACC,GACTA,EAAEC,iBACFJ,EDT0B,CAC9BhC,KARa,WASbC,GAAI2B,IACJlB,OCMqBqB,KAEnBM,SAdoB,SAACF,GAAO,IAAD,EACPA,EAAEG,OAAhBrC,EADqB,EACrBA,GAAIsC,EADiB,EACjBA,MACZP,EDYqC,CACvChC,KAjBuB,mBAkBvBU,OCd0B,CAAEU,MAAOnB,EAAIoB,IAAKkB,OAcxC,+CACA,6BACE,2BAAOC,QAAQ,QAAf,QACA,4BACEvC,GAAG,OACHsC,MAAOvC,EACPyC,UAAU,GAEV,4BAAQF,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,YAGJ,6BACE,2BAAOC,QAAQ,QAAf,QACA,2BACExC,KAAK,OACLC,GAAG,OACHsC,MAAOpC,EACPuC,YAAY,OACZD,UAAU,KAGd,6BACE,2BAAOD,QAAQ,YAAf,YACA,2BACExC,KAAK,OACLC,GAAG,WACHsC,MAAOnC,EACPsC,YAAY,UACZD,UAAU,KAGd,6BACE,2BAAOD,QAAQ,SAAf,SACA,2BACExC,KAAK,SACL2C,KAAK,OACLC,IAAI,IACJ3C,GAAG,QACHsC,MAAOlC,EACPqC,YAAY,UACZD,UAAU,KAGd,6BACE,2BAAOD,QAAQ,QAAf,QACA,2BACExC,KAAK,OACLC,GAAG,OACHsC,MAAOrC,EACPuC,UAAU,KAGd,4BAAQR,UAAU,MAAMjC,KAAK,SAAS6C,aAAW,YAAjD,WCvCSC,EApCM,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,KAAMnC,EAArB,EAAqBA,OAArB,OACnB,yBAAKoB,UAAU,sBACb,0BAAMzB,OAAO,GAAGyB,UAAU,gBACxB,kCACE,2BAAOO,QAAQ,UAAf,QACA,4BACErC,KAAK,SACLF,GAAG,SACHoC,SAAU,SAACF,GAAD,OAAOtB,EAAOsB,EAAEG,OAAOC,SAEjC,4BAAQA,MAAM,IAAd,OACCQ,EAAWE,KAAI,SAAC7C,EAAU8C,GACzB,OACE,4BAAQC,IAAKD,EAAOX,MAAOnC,GACxBA,QAMX,kCACE,2BAAOoC,QAAQ,QAAf,WACA,4BACErC,KAAK,OACLF,GAAG,OACHoC,SAAU,SAACF,GAAD,OAAOa,EAAKb,EAAEG,OAAOC,SAE/B,4BAAQA,MAAM,QAAd,eACA,4BAAQA,MAAM,QAAd,gBACA,4BAAQA,MAAM,SAAd,0BC3BJa,EAAgB,SAAC7C,GACrB,IAAIwC,EAAaxC,EAAM0C,KAAI,SAAAxC,GAAI,OAAIA,EAAKL,YACxC,OAAO2C,EAAWlC,QAAO,SAACQ,EAAKgC,GAAN,OAAYN,EAAWO,QAAQjC,KAASgC,MAYpDvB,eATS,SAACvB,GAAD,MAAY,CAClCwC,WAAYK,EAAc7C,EAAMD,WAGP,SAAC0B,GAAD,MAAe,CACxCnB,OAAQ,SAAC0C,GAAD,OAAevB,EHkBS,CAChChC,KA1BiB,aA2BjBe,KGpB0CwC,KAC1CP,KAAM,SAACO,GAAD,OAAevB,EHYY,CACjChC,KApBkB,cAqBlBe,KGdyCwC,QAG5BzB,CAA6CgB,G,QCO7CU,EArBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASvD,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,MAAlC,OACT,4BACI,wBAAI4B,UAAU,YACV,0BAAMA,UAAU,QAAQ/B,GACxB,0BAAM+B,UAAU,QAAQ9B,GACxB,yBAAK8B,UAAU,YACX,8BAAO7B,KAGf,wBAAI6B,UAAU,SACT5B,EAAQ,EAAI,KAAO,IADxB,IAEMqD,KAAKC,IAAItD,IAEf,4BACI,4BAAQwC,aAAW,cAAcY,QAASA,GACtC,kBAACG,EAAA,EAAD,UCQD9B,iBAvBD,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOuD,EAAV,EAAUA,WAAV,OACV,+BACI,+BACI,wBAAI5B,UAAU,iBACV,qCACA,qCACA,+BAGR,+BACK3B,EAAM2C,KAAI,SAACxC,GACR,OACI,kBAAC,EAAD,eACI0C,IAAK1C,EAAKR,IACNQ,EAFR,CAGIgD,QAAS,kBAAMI,EAAWpD,EAAKR,gBCfjD6D,EAAU,SAACxD,EAAOO,EAAQmC,GAC9B,IAAIe,EAAO,YAAIzD,GAAO0C,MAAK,SAACgB,EAAGC,GAC3B,OAAIA,EAAEjB,EAAK/B,QAAU+C,EAAEhB,EAAK/B,QACf,EACFgD,EAAEjB,EAAK/B,QAAU+C,EAAEhB,EAAK/B,SACvB,EAEL,KAMX,OAJI+B,EAAK9B,WACP6C,EAAKG,UAGQ,KAAXrD,EACKkD,EAAKlD,QAAO,SAAAJ,GAAI,OAAII,IAAWJ,EAAKL,YAEpC2D,GAYIjC,eARS,SAAAvB,GAAK,MAAK,CAChCD,MAAOwD,EAAQvD,EAAMD,MAAOC,EAAMO,SAAUP,EAAMS,aAGzB,SAAAgB,GAAQ,MAAK,CACtC6B,WAAY,SAAA5D,GAAE,OAAI+B,ENZM,SAAA/B,GAAE,MAAK,CAC/BD,KAbkB,cAclBC,MMU2B4D,CAAW5D,QAGzB6B,CAA6CqC,GCV7CrC,eAdS,SAAAvB,GAAK,MAAK,CAChC6D,OANmBC,EAMC9D,EAAMD,MALX+D,EAAKpB,KAAI,SAAAxC,GAAI,OAAIA,EAAKJ,SACvBiE,QAAO,SAACN,EAAGC,GAAJ,OAAUD,EAAIC,OAFhB,IAAAI,IAmBNvC,EAVC,SAAC,GAAD,IAAGsC,EAAH,EAAGA,MAAH,OACd,yBAAKnC,UAAU,WACb,uCACA,uBAAGA,UAAU,WACVmC,EAAQ,EAAI,KAAO,IACpB,kCAAQV,KAAKC,IAAIS,IAFnB,YCSWG,G,MAjBH,kBACV,oCACE,gCACE,0DAEF,0BAAMtC,UAAU,WACd,kBAAC,EAAD,MACA,6BACE,gDACA,kBAAC,EAAD,MACA,kBAACuC,EAAD,MACA,kBAACC,EAAD,WCXFC,G,MAAcC,SAASC,eAAe,SAC5CC,IAASC,OACP,kBAAC,IAAD,CAAUtD,MAAOA,GACf,kBAAC,EAAD,OAEFkD,K","file":"static/js/main.1f295b1a.chunk.js","sourcesContent":["export const SampleData = [\r\n    {\r\n        type: \"expense\",\r\n        id: 0,\r\n        date: '2019-11-02',\r\n        name: 'groceries',\r\n        category: 'food',\r\n        price: -200.00,\r\n    },\r\n    {   \r\n        type: \"expense\",\r\n        id: 1,\r\n        date: '2019-11-08',\r\n        name: 'monthly rent',\r\n        category: 'housing',\r\n        price: -1000.00,\r\n    },\r\n    {   \r\n        type: \"expense\",\r\n        id: 2,\r\n        date: '2019-11-22',\r\n        name: 'spotify',\r\n        category: 'subscriptions',\r\n        price: -9.99,\r\n    }\r\n] \r\n\r\nexport const Months = [\r\n    '',\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n]","import { SampleData } from '../../components/helpers';\r\n\r\nconst items = (state = SampleData, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      const item = { ...action.object }; \r\n      const multiplier = item.type === \"income\" ? 1 : -1;\r\n      item.price = parseFloat(item.price)*multiplier;\r\n      return [\r\n        // makes a copy of the state and adds new object!\r\n        ...state,\r\n        item \r\n      ]\r\n    case 'DELETE_ITEM':\r\n      return [...state].filter((item) => item.id !== action.id); \r\n    default:\r\n      // returns the state unchanged\r\n      return state\r\n  }\r\n}\r\n\r\nexport default items","const filterBy = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case 'SET_FILTER':\r\n      return action.text\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default filterBy"," const sorting = (state = {column: \"date\", direction: false}, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'SORT_COLUMN':  \r\n      return (action.text === \"category\" || action.text === \"date\") \r\n        ? { column: action.text, direction: false }  \r\n        : { column: action.text, direction: true } \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default sorting","const currentItem  = (state = {}, action) => { \r\n  switch (action.type) {\r\n    case 'SET_CURRENT_ITEM':  \r\n      let currentItem = { ...state }; \r\n      currentItem[action.object.field] = action.object.val.toLowerCase();\r\n      return currentItem; \r\n    case 'ADD_ITEM':  \r\n      return { name: \"\", category: \"\", price: 0, date: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default currentItem;","import { combineReducers } from 'redux';\r\nimport items from './items'; \r\nimport filterBy from './filterBy';\r\nimport sorting from './sorting';\r\nimport currentItem from './currentItem';\r\n\r\nexport default combineReducers({\r\n  items,  \r\n  filterBy,\r\n  sorting,\r\n  currentItem\r\n})","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","\r\nimport { SampleData } from '../components/helpers';\r\nlet nextItemId = SampleData.length\r\n\r\nconst ADD_ITEM = 'ADD_ITEM'\r\nconst DELETE_ITEM = 'DELETE_ITEM' \r\nconst SET_CURRENT_ITEM = 'SET_CURRENT_ITEM'\r\nconst SET_FILTER = 'SET_FILTER'\r\nconst SORT_COLUMN = 'SORT_COLUMN'\r\n\r\n// Action creators\r\nexport const addItem = object => ({ \r\n    type: ADD_ITEM, \r\n    id: nextItemId++,\r\n    object\r\n})\r\n\r\nexport const deleteItem = id => ({\r\n  type: DELETE_ITEM, \r\n  id\r\n})\r\n\r\nexport const setCurrentItem = object => ({\r\n  type: SET_CURRENT_ITEM, \r\n  object\r\n})\r\n\r\nexport const sortColumn = text => ({\r\n  type:  SORT_COLUMN,\r\n  text\r\n})\r\n\r\nexport const setFilter = text => ({\r\n  type: SET_FILTER, \r\n  text\r\n})","import React from 'react';  \r\nimport { connect } from 'react-redux';\r\nimport { addItem, setCurrentItem } from '../redux/actions';  \r\n\r\nconst mapStateToProps = (state) => ({ current: state.currentItem });\r\n\r\nconst AddItem = ({ current, dispatch }) => { \r\n   // Keeps track of user's input, saving the input to its corresponding property in the list item object\r\n  const handleUserInput = (e) => {\r\n    const { id, value } = e.target;  \r\n    dispatch(setCurrentItem({ field: id, val: value }));\r\n  }     \r\n  const { type, name, category, price, date } = current;\r\n  \r\n  return (\r\n    <form \r\n      action=\"\" \r\n      className=\"inputForm\" \r\n      onSubmit={(e) => {\r\n        e.preventDefault();  \r\n        dispatch(addItem(current));  \r\n      }} \r\n      onChange={handleUserInput} \r\n    >  \r\n      <h2>Add Transaction</h2>\r\n      <div>\r\n        <label htmlFor=\"name\">Type</label>\r\n        <select \r\n          id=\"type\"\r\n          value={type}\r\n          required={true}\r\n        >\r\n          <option value=\"expense\">Expense</option> \r\n          <option value=\"income\">Income</option> \r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"name\">Item</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"name\" \r\n          value={name}  \r\n          placeholder=\"Rent\" \r\n          required={true}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"category\">Category</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"category\" \r\n          value={category}  \r\n          placeholder=\"Housing\" \r\n          required={true}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"price\">Price</label>\r\n        <input \r\n          type=\"number\" \r\n          step=\"0.01\" \r\n          min=\"0\" \r\n          id=\"price\" \r\n          value={price} \r\n          placeholder=\"1000.00\" \r\n          required={true}\r\n        />\r\n      </div> \r\n      <div>\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input \r\n          type=\"date\" \r\n          id=\"date\"  \r\n          value={date} \r\n          required={true}\r\n        /> \r\n      </div>\r\n      <button className=\"add\" type=\"submit\" aria-label=\"add item\">Add</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddItem)","import React from 'react'; \r\n\r\nconst SelectFilter = ({ categories, sort, filter }) => (\r\n  <div className=\"visiblilityFilters\">\r\n    <form action=\"\" className=\"filterSelect\">\r\n      <fieldset>\r\n        <label htmlFor=\"filter\">Show</label>\r\n        <select \r\n          name=\"filter\" \r\n          id=\"filter\"\r\n          onChange={(e) => filter(e.target.value)} \r\n        >\r\n          <option value=\"\">All</option>\r\n          {categories.map((category, index) => {\r\n            return (\r\n              <option key={index} value={category}>\r\n                {category}\r\n              </option>\r\n            )\r\n          })}\r\n        </select>\r\n      </fieldset>\r\n      <fieldset>\r\n        <label htmlFor=\"sort\">Sort By</label>\r\n        <select \r\n          name=\"sort\" \r\n          id=\"sort\"\r\n          onChange={(e) => sort(e.target.value)}\r\n        >\r\n          <option value=\"date\">Most Recent</option>\r\n          <option value=\"name\">Alphabetical</option>\r\n          <option value=\"price\">Highest to Lowest</option>\r\n        </select>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n) \r\n\r\nexport default SelectFilter","import { connect } from 'react-redux';\r\nimport { setFilter, sortColumn } from '../redux/actions'; \r\nimport SelectFilter from '../components/SelectFilter';\r\n\r\nconst getCategories = (state) => { \r\n  let categories = state.map(item => item.category)\r\n  return categories.filter((val, i) => categories.indexOf(val) === i)   \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categories: getCategories(state.items)\r\n}) \r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filter: (selection) => dispatch(setFilter(selection)),\r\n  sort: (selection) => dispatch(sortColumn(selection)),\r\n}) \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectFilter)","import React from 'react';  \r\nimport { Button } from '@material-ui/core'; \r\nimport { Delete } from '@material-ui/icons';\r\n\r\nconst Item = ({ onClick, date, name, category, price }) => (\r\n    <tr>  \r\n        <td className=\"itemCard\">\r\n            <span className=\"date\">{date}</span> \r\n            <span className=\"name\">{name}</span>\r\n            <div className=\"category\">\r\n                <span>{category}</span>\r\n            </div>\r\n        </td>  \r\n        <td className=\"price\">\r\n            {price < 0 ? \"- \" : \" \"}\r\n            ${Math.abs(price)}\r\n        </td>\r\n        <td>\r\n            <button aria-label=\"Delete item\" onClick={onClick}> \r\n                <Delete />\r\n            </button>\r\n        </td>\r\n    </tr> \r\n)\r\n\r\nexport default Item","import React from 'react'; \r\nimport { connect } from 'react-redux';\r\nimport Item from './Item'; \r\n\r\nconst Table = ({ items, deleteItem }) => ( \r\n    <table> \r\n        <thead> \r\n            <tr className=\"tableHeadings\">  \r\n                <th>Item </th> \r\n                <th>Total</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>  \r\n            {items.map((item) => { \r\n                return (\r\n                    <Item \r\n                        key={item.id}\r\n                        {...item} \r\n                        onClick={() => deleteItem(item.id)}\r\n                    />\r\n                ) \r\n            })}  \r\n        </tbody>\r\n    </table>  \r\n)\r\n\r\nexport default connect()(Table)","import { connect } from 'react-redux';\r\nimport { deleteItem } from '../redux/actions.js';\r\nimport Table from '../components/Table';\r\n\r\nconst getList = (items, filter, sort) => { \r\n  let list = [...items].sort((a, b) => {\r\n      if (b[sort.column] > a[sort.column]) {\r\n            return 1;\r\n      } else if (b[sort.column] < a[sort.column]) {\r\n          return -1;\r\n      }\r\n      return 0;\r\n  });\r\n  if (sort.direction) {\r\n    list.reverse();\r\n  }\r\n\r\n  if (filter !== \"\") { \r\n    return list.filter(item => filter === item.category);\r\n  } else { \r\n    return list;\r\n  } \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: getList(state.items, state.filterBy, state.sorting) \r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteItem: id => dispatch(deleteItem(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst calculateSum = data => {\r\n  const values = data.map(item => item.price);\r\n  return values.reduce((a, b) => a + b);\r\n}\r\n\r\nconst mapStateToProps = state => ({ \r\n  total: calculateSum(state.items)\r\n})\r\n\r\nconst Balance = ({ total }) => (\r\n  <div className=\"summary\">\r\n    <h2>Balance</h2>\r\n    <p className=\"balance\">\r\n      {total < 0 ? \"- \" : \" \"}\r\n      <span>${Math.abs(total)}</span> CAD\r\n    </p>\r\n  </div>\r\n) \r\n\r\nexport default connect(mapStateToProps)(Balance); ","import React from 'react';  \r\nimport AddItem from './components/AddItem';\r\nimport Filter from './containers/Filter';\r\nimport List from './containers/List';  \r\nimport Balance from './components/Balance'; \r\nimport './App.css'; \r\n\r\nconst App = () => (\r\n  <>\r\n    <header> \r\n      <h1>Personal Spending Tracker</h1>\r\n    </header>\r\n    <main className=\"wrapper\">   \r\n      <AddItem />\r\n      <div>\r\n        <h2>Account Activity</h2>\r\n        <Balance />\r\n        <Filter /> \r\n        <List /> \r\n      </div> \r\n    </main>\r\n  </>\r\n)\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport App from './App'\r\nimport './index.css';\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n)\r\n"],"sourceRoot":""}