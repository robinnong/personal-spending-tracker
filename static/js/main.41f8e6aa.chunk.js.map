{"version":3,"sources":["components/helpers.js","redux/reducers/items.js","redux/reducers/filterBy.js","redux/reducers/sorting.js","redux/reducers/currentItem.js","redux/reducers/index.js","redux/store.js","redux/actions.js","components/AddItem.js","components/SelectFilter.js","containers/Filter.js","components/Item.js","components/Table.js","containers/List.js","components/Balance.js","App.js","index.js"],"names":["SampleData","type","id","date","name","category","price","Categories","items","state","action","item","object","multiplier","parseFloat","filter","array","includes","filterBy","text","sorting","column","direction","currentItem","field","val","toLowerCase","combineReducers","store","createStore","rootReducer","composeWithDevTools","nextItemId","length","connect","current","dispatch","className","onSubmit","e","preventDefault","onChange","target","value","htmlFor","required","placeholder","map","index","key","step","min","aria-label","SelectFilter","categories","sort","getCategories","i","indexOf","selection","Item","onClick","useState","checked","isChecked","icon","setIcon","useEffect","Math","abs","deleteItem","selected","setSelected","getList","list","a","b","reverse","Table","total","data","reduce","App","Filter","List","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.41f8e6aa.chunk.js","sourcesContent":["export const SampleData = [\r\n    {\r\n        type: \"expense\",\r\n        id: 0,\r\n        date: '2019-11-02',\r\n        name: 'groceries',\r\n        category: 'groceries',\r\n        price: -200.00,\r\n    },\r\n    {   \r\n        type: \"expense\",\r\n        id: 1,\r\n        date: '2019-11-08',\r\n        name: 'monthly rent',\r\n        category: 'housing',\r\n        price: -1000.00,\r\n    },\r\n    {   \r\n        type: \"expense\",\r\n        id: 2,\r\n        date: '2019-11-22',\r\n        name: 'spotify',\r\n        category: 'subscriptions',\r\n        price: -9.99,\r\n    }\r\n] \r\n\r\nexport const Categories = [ \r\n    'dining',\r\n    'entertainment',\r\n    'fitness',\r\n    'groceries',\r\n    'housing',\r\n    'income',\r\n    'misc.',\r\n    'personal hygeine',\r\n    'shopping',\r\n    'subscriptions',\r\n    'utilities',\r\n]\r\n\r\nexport const Months = [\r\n    '',\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec'\r\n]","import { SampleData } from '../../components/helpers';\r\n\r\nconst items = (state = SampleData, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      const item = { ...action.object }; \r\n      const multiplier = item.type === \"income\" ? 1 : -1;\r\n      item.price = parseFloat(item.price)*multiplier;\r\n      return [\r\n        // makes a copy of the state and adds new object!\r\n        ...state,\r\n        item \r\n      ]\r\n    case 'DELETE_ITEM':\r\n      return [...state].filter((item) => !action.array.includes(item.id)); \r\n    default:\r\n      // returns the state unchanged\r\n      return state\r\n  }\r\n}\r\n\r\nexport default items","const filterBy = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case 'SET_FILTER':\r\n      return action.text\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default filterBy"," const sorting = (state = {column: \"date\", direction: false}, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'SORT_COLUMN':  \r\n      return (action.text === \"category\" || action.text === \"date\") \r\n        ? { column: action.text, direction: false }  \r\n        : { column: action.text, direction: true } \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default sorting","const currentItem  = (state = {}, action) => { \r\n  switch (action.type) {\r\n    case 'SET_CURRENT_ITEM':  \r\n      let currentItem = { ...state }; \r\n      currentItem[action.object.field] = action.object.val.toLowerCase();\r\n      return currentItem; \r\n    case 'ADD_ITEM':  \r\n      return { name: \"\", category: \"\", price: 0, date: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default currentItem;","import { combineReducers } from 'redux';\r\nimport items from './items'; \r\nimport filterBy from './filterBy';\r\nimport sorting from './sorting';\r\nimport currentItem from './currentItem';\r\n\r\nexport default combineReducers({\r\n  items,  \r\n  filterBy,\r\n  sorting,\r\n  currentItem\r\n})","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","\r\nimport { SampleData } from '../components/helpers';\r\nlet nextItemId = SampleData.length\r\n\r\nconst ADD_ITEM = 'ADD_ITEM'\r\nconst DELETE_ITEM = 'DELETE_ITEM' \r\nconst SET_CURRENT_ITEM = 'SET_CURRENT_ITEM'\r\nconst SET_FILTER = 'SET_FILTER'\r\nconst SORT_COLUMN = 'SORT_COLUMN'\r\n\r\n// Action creators\r\nexport const addItem = object => ({ \r\n    type: ADD_ITEM, \r\n    id: nextItemId++,\r\n    object\r\n})\r\n\r\nexport const deleteItem = array => ({\r\n  type: DELETE_ITEM, \r\n  array\r\n})\r\n\r\nexport const setCurrentItem = object => ({\r\n  type: SET_CURRENT_ITEM, \r\n  object\r\n})\r\n\r\nexport const sortColumn = text => ({\r\n  type:  SORT_COLUMN,\r\n  text\r\n})\r\n\r\nexport const setFilter = text => ({\r\n  type: SET_FILTER, \r\n  text\r\n})","import React from 'react';  \r\nimport { connect } from 'react-redux';\r\nimport { Categories } from './helpers';\r\nimport { addItem, setCurrentItem } from '../redux/actions';  \r\n\r\nconst mapStateToProps = (state) => ({ current: state.currentItem });\r\n\r\nconst AddItem = ({ current, dispatch }) => { \r\n   // Keeps track of user's input, saving the input to its corresponding property in the list item object\r\n  const handleUserInput = (e) => {\r\n    const { id, value } = e.target;  \r\n    dispatch(setCurrentItem({ field: id, val: value }));\r\n  }     \r\n  const { type, name, price, date } = current;\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Add Transaction</h2>\r\n      <form \r\n        action=\"\" \r\n        className=\"inputForm\" \r\n        onSubmit={(e) => {\r\n          e.preventDefault();  \r\n          dispatch(addItem(current));  \r\n        }} \r\n        onChange={handleUserInput} \r\n        >  \r\n        <div>\r\n          <label htmlFor=\"name\">Type</label>\r\n          <select \r\n            id=\"type\"\r\n            value={type}\r\n            required={true}\r\n            >\r\n            <option value=\"expense\">Expense</option> \r\n            <option value=\"income\">Income</option> \r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"name\">Item</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"name\" \r\n            value={name}  \r\n            placeholder=\"Rent\" \r\n            required={true}\r\n          />\r\n        </div>\r\n\r\n        <div> \r\n          <label htmlFor=\"category\">Category</label>\r\n          <select\r\n            id=\"category\" \r\n            value={type}\r\n            required={true}\r\n          >\r\n            {Categories.map((category, index)=> {\r\n              return (\r\n                <option key={index} value={category}>{category}</option>\r\n              )\r\n            })} \r\n          </select>\r\n        </div> \r\n\r\n        <div>\r\n          <label htmlFor=\"price\">Price</label>\r\n          <input \r\n            type=\"number\" \r\n            step=\"0.01\" \r\n            min=\"0\" \r\n            id=\"price\" \r\n            value={price} \r\n            placeholder=\"1000.00\" \r\n            required={true}\r\n            />\r\n        </div> \r\n        <div>\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input \r\n            type=\"date\" \r\n            id=\"date\"  \r\n            value={date} \r\n            required={true}\r\n            /> \r\n        </div>\r\n        <button className=\"add\" type=\"submit\" aria-label=\"add item\">+</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddItem)","import React from 'react'; \r\nimport { Categories } from './helpers';\r\n\r\nconst SelectFilter = ({ categories, sort, filter }) => ( \r\n  <form action=\"\" className=\"filterSelect\">\r\n    <div>\r\n      <label htmlFor=\"filter\">Show</label>\r\n      <select \r\n        name=\"filter\" \r\n        id=\"filter\"\r\n        onChange={(e) => filter(e.target.value)} \r\n      >\r\n        <option value=\"\">All</option>\r\n        {Categories.map((category, index) => {\r\n          return (\r\n            <option key={index} value={category}>{category}</option>\r\n          )\r\n        })} \r\n      </select>\r\n    </div>\r\n    \r\n    <div>\r\n      <label htmlFor=\"sort\">Sort By</label>\r\n      <select \r\n        name=\"sort\" \r\n        id=\"sort\"\r\n        onChange={(e) => sort(e.target.value)}\r\n      >\r\n        <option value=\"date\">Most Recent</option>\r\n        <option value=\"name\">Alphabetical</option>\r\n        <option value=\"price\">Highest to Lowest</option>\r\n      </select>\r\n    </div>\r\n  </form> \r\n) \r\n\r\nexport default SelectFilter","import { connect } from 'react-redux';\r\nimport { setFilter, sortColumn } from '../redux/actions'; \r\nimport SelectFilter from '../components/SelectFilter';\r\n\r\nconst getCategories = (state) => { \r\n  let categories = state.map(item => item.category)\r\n  return categories.filter((val, i) => categories.indexOf(val) === i)   \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categories: getCategories(state.items)\r\n}) \r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filter: (selection) => dispatch(setFilter(selection)),\r\n  sort: (selection) => dispatch(sortColumn(selection)),\r\n}) \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectFilter)","import React, { useState, useEffect } from 'react';   \r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport LocalGroceryStoreIcon from '@material-ui/icons/LocalGroceryStore';\r\nimport LocalDiningIcon from '@material-ui/icons/LocalDining';\r\n\r\nconst Item = ({ onClick, date, name, category, price }) => { \r\n    const [checked, isChecked] = useState(false);\r\n    const [icon, setIcon] = useState(<AttachMoneyIcon/>); \r\n    \r\n    useEffect(()=> {\r\n        switch(category) {\r\n            case 'dining':\r\n                setIcon(<LocalDiningIcon />)\r\n                break;\r\n            case 'entertainment':\r\n                setIcon(<MovieIcon />)\r\n                break;\r\n            case 'groceries':\r\n                setIcon(<LocalGroceryStoreIcon />)\r\n                break;\r\n            case 'housing':\r\n                setIcon(<HomeIcon />)\r\n                break;\r\n            case 'subscriptions':\r\n                setIcon(<LiveTvIcon />)\r\n                break;\r\n            default: \r\n                setIcon(<AttachMoneyIcon />)\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <tr>  \r\n            <td className=\"category\">\r\n                <div className=\"categoryIcon\">{icon}</div>\r\n            </td>\r\n            <td className=\"itemCard\">\r\n                <span className=\"name\">{name}</span> \r\n                <span className=\"date\">{date}</span> \r\n            </td>  \r\n            <td className=\"price\">\r\n                {price < 0 ? \"- \" : \" \"}\r\n                ${Math.abs(price)}\r\n            </td>\r\n            <td> \r\n                <button \r\n                className=\"checkbox\" \r\n                aria-label=\"checkbox\" \r\n                    onClick={() => {\r\n                        onClick()\r\n                        isChecked(!checked)\r\n                    }}\r\n                >\r\n                    {checked ? <CheckIcon /> : null}\r\n                </button>\r\n            </td>\r\n        </tr> \r\n    )\r\n}\r\n\r\nexport default Item","import React, { useState } from 'react'; \r\nimport { connect } from 'react-redux';\r\nimport Item from './Item'; \r\n\r\nconst Table = ({ items, deleteItem }) => {\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    // Removes or adds selection\r\n    const addSelected = (id) => {\r\n        if (selected.includes(id)) {\r\n            setSelected([...selected].filter(item => item !== id))\r\n        } else {\r\n            setSelected([...selected, id]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table> \r\n            <thead> \r\n                <tr>  \r\n                    <th></th>\r\n                    <th>Item </th> \r\n                    <th>Total</th>\r\n                    <th>\r\n                        <button \r\n                            className={selected.length > 0 ? \"deleteButton\" : \"hidden deleteButton\"}\r\n                            onClick={() => deleteItem(selected)}>\r\n                                Delete\r\n                        </button>\r\n\r\n\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>  \r\n                {items.map((item) => { \r\n                    return (\r\n                        <Item \r\n                            key={item.id}\r\n                            {...item} \r\n                            onClick={() => addSelected(item.id)}\r\n                        />\r\n                    ) \r\n                })}  \r\n            </tbody>\r\n        </table>  \r\n    )\r\n}\r\n\r\nexport default connect()(Table)","import { connect } from 'react-redux';\r\nimport { deleteItem } from '../redux/actions.js';\r\nimport Table from '../components/Table';\r\n\r\nconst getList = (items, filter, sort) => { \r\n  let list = [...items].sort((a, b) => {\r\n      if (b[sort.column] > a[sort.column]) {\r\n            return 1;\r\n      } else if (b[sort.column] < a[sort.column]) {\r\n          return -1;\r\n      }\r\n      return 0;\r\n  });\r\n  if (sort.direction) {\r\n    list.reverse();\r\n  }\r\n\r\n  if (filter !== \"\") { \r\n    return list.filter(item => filter === item.category);\r\n  } else { \r\n    return list;\r\n  } \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: getList(state.items, state.filterBy, state.sorting) \r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteItem: id => dispatch(deleteItem(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst calculateSum = data => {\r\n  const values = data.map(item => item.price);\r\n  return values.reduce((a, b) => a + b);\r\n}\r\n\r\nconst mapStateToProps = state => ({ \r\n  total: calculateSum(state.items)\r\n})\r\n\r\nconst Balance = ({ total }) => (\r\n  <div className=\"summary\">\r\n    <h2>Balance</h2>\r\n    <p className=\"balance\">\r\n      {total < 0 ? \"- \" : \" \"}\r\n      <span>${Math.abs(total)}</span> CAD\r\n    </p>\r\n  </div>\r\n) \r\n\r\nexport default connect(mapStateToProps)(Balance); ","import React from 'react';  \r\nimport AddItem from './components/AddItem';\r\nimport Filter from './containers/Filter';\r\nimport List from './containers/List';  \r\nimport Balance from './components/Balance'; \r\nimport './App.css'; \r\n\r\nconst App = () => (\r\n  <>\r\n    <header> \r\n      <h1>Personal Spending Tracker</h1> \r\n      <Balance />\r\n      <AddItem />\r\n    </header>\r\n    <main className=\"wrapper\">    \r\n      <div>\r\n        <Filter /> \r\n        <List /> \r\n      </div> \r\n    </main>\r\n  </>\r\n)\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport App from './App'\r\nimport './index.css';\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n)\r\n"],"sourceRoot":""}