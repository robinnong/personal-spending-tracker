{"version":3,"sources":["components/helpers.js","redux/reducers/items.js","redux/reducers/filterBy.js","redux/reducers/sorting.js","redux/reducers/currentItem.js","redux/reducers/darkMode.js","redux/reducers/dateRange.js","redux/reducers/index.js","redux/store.js","redux/actions.js","components/styles.js","components/AddItem.js","components/SelectFilter.js","containers/Filter.js","components/Item.js","components/Table.js","containers/List.js","components/Balance.js","App.js","index.js"],"names":["SampleData","type","id","date","dateString","name","category","price","Categories","icon","Months","items","state","action","item","object","multiplier","parseFloat","index","parseInt","substring","month","day","filter","array","includes","filterBy","text","sorting","column","direction","currentItem","field","val","toLowerCase","darkMode","dateRange","combineReducers","store","createStore","rootReducer","composeWithDevTools","nextItemId","length","Body","styled","div","props","Header","header","TableStyle","table","Form","form","visible","VisibilityFilters","Toggle","button","Button","connect","current","dispatch","useState","isVisible","setVisibility","onSubmit","e","preventDefault","onChange","target","value","htmlFor","required","placeholder","map","key","step","min","className","aria-label","onClick","SelectFilter","setDate","sort","dateRanges","range","full","year","getDateRanges","dates","slice","num","i","indexOf","selection","Item","checked","isChecked","setIcon","useEffect","find","Math","abs","deleteItem","selected","setSelected","getList","sorted","a","b","reverse","Table","total","data","reduce","bool","Filter","List","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.250f1271.chunk.js","sourcesContent":["import React from 'react';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\r\nimport LocalGroceryStoreIcon from '@material-ui/icons/LocalGroceryStore';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\r\nimport LocalDiningIcon from '@material-ui/icons/LocalDining';\r\n\r\n\r\nexport const SampleData = [\r\n    {\r\n        type: \"expense\",\r\n        id: 0,\r\n        date: '2019-11-02',\r\n        dateString: '02 November',\r\n        name: 'groceries',\r\n        category: 'groceries',\r\n        price: -200.00,\r\n    },\r\n    {   \r\n        type: \"expense\",\r\n        id: 1,\r\n        date: '2019-11-08',\r\n        dateString: '08 November',\r\n        name: 'monthly rent',\r\n        category: 'housing',\r\n        price: -1000.00,\r\n    },\r\n    {   \r\n        type: \"expense\",\r\n        id: 2,\r\n        date: '2019-11-22',\r\n        dateString: '22 November',\r\n        name: 'spotify',\r\n        category: 'subscriptions',\r\n        price: -9.99,\r\n    },\r\n    {\r\n        type: \"expense\",\r\n        id: 3,\r\n        date: '2019-10-23',\r\n        dateString: '23 October',\r\n        name: 'birthday dinner',\r\n        category: 'dining',\r\n        price: -39.53,\r\n    },\r\n    {\r\n        type: \"expense\",\r\n        id: 4,\r\n        date: '2019-10-22',\r\n        dateString: '22 October',\r\n        name: 'spotify',\r\n        category: 'subscriptions',\r\n        price: -9.99,\r\n    }\r\n] \r\n\r\nexport const Categories = [ \r\n    { \r\n        category: 'dining',\r\n        icon: <LocalDiningIcon />\r\n    },\r\n    {\r\n        category: 'entertainment',\r\n        icon: <LiveTvIcon />\r\n    }, \r\n    {\r\n        category: 'groceries',\r\n        icon: <LocalGroceryStoreIcon />\r\n    },\r\n    {\r\n        category: 'health',\r\n        icon: <FitnessCenterIcon />\r\n    },\r\n    {\r\n        category: 'housing',\r\n        icon: <HomeIcon />\r\n    },\r\n    {\r\n        category: 'earnings',\r\n        icon: <WorkIcon />\r\n    },\r\n    {\r\n        category: 'misc.',\r\n        icon: <AttachMoneyIcon />\r\n    }, \r\n    {\r\n        category: 'shopping',\r\n        icon: <LocalMallIcon />\r\n    },\r\n    {\r\n        category: 'subscriptions',\r\n        icon: <MovieIcon />\r\n    },\r\n    {\r\n        category: 'utilities',\r\n        icon: <BuildIcon />\r\n    }\r\n]\r\n\r\nexport const Months = [\r\n    '',\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n]","import { SampleData, Months } from '../../components/helpers'; \r\n\r\nconst items = (state = SampleData, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      const item = { ...action.object }; \r\n      const multiplier = item.type === \"income\" ? 1 : -1;\r\n      item.price = parseFloat(item.price)*multiplier;\r\n\r\n      const index = parseInt(item.date.substring(5, 7));\r\n      const month = Months[index];\r\n      const day = item.date.substring(8, 10);  \r\n      item.dateString = `${day} ${month}` \r\n      return [\r\n        // makes a copy of the state and adds new object!\r\n        ...state,\r\n        item \r\n      ]\r\n    case 'DELETE_ITEM':\r\n      return [...state].filter((item) => !action.array.includes(item.id)); \r\n    default:\r\n      // returns the state unchanged\r\n      return state\r\n  }\r\n}\r\n\r\nexport default items","const filterBy = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case 'SET_FILTER':\r\n      return action.text\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default filterBy"," const sorting = (state = {column: \"date\", direction: false}, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'SORT_COLUMN':  \r\n      return (action.text === \"category\" || action.text === \"date\") \r\n        ? { column: action.text, direction: false }  \r\n        : { column: action.text, direction: true } \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default sorting","const currentItem  = (state = {}, action) => { \r\n  switch (action.type) {\r\n    case 'SET_CURRENT_ITEM':  \r\n      let currentItem = { ...state }; \r\n      currentItem[action.object.field] = action.object.val.toLowerCase();\r\n      return currentItem; \r\n    case 'ADD_ITEM':  \r\n      return { name: \"\", category: \"\", price: 0, date: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default currentItem;","const darkMode = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'SET_DARK_MODE':\r\n      return !state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default darkMode","const dateRange = (state = \"2019-11\", action) => {\r\n  switch (action.type) {\r\n    case 'SET_DATE':\r\n      return action.text\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default dateRange","import { combineReducers } from 'redux';\r\nimport items from './items'; \r\nimport filterBy from './filterBy';\r\nimport sorting from './sorting';\r\nimport currentItem from './currentItem';\r\nimport darkMode from './darkMode';\r\nimport dateRange from './dateRange';\r\n\r\nexport default combineReducers({\r\n  currentItem,\r\n  darkMode,\r\n  dateRange,\r\n  items,  \r\n  filterBy,\r\n  sorting,\r\n})","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","\r\nimport { SampleData } from '../components/helpers';\r\nlet nextItemId = SampleData.length\r\n\r\nconst ADD_ITEM = 'ADD_ITEM'\r\nconst DELETE_ITEM = 'DELETE_ITEM' \r\nconst SET_CURRENT_ITEM = 'SET_CURRENT_ITEM'\r\nconst SET_FILTER = 'SET_FILTER'\r\nconst SORT_COLUMN = 'SORT_COLUMN'\r\nconst SET_DARK_MODE = 'SET_DARK_MODE'\r\nconst SET_DATE = 'SET_DATE'\r\n\r\n// Action creators\r\nexport const addItem = object => ({ \r\n    type: ADD_ITEM, \r\n    id: nextItemId++,\r\n    object\r\n})\r\n\r\nexport const deleteItem = array => ({\r\n  type: DELETE_ITEM, \r\n  array\r\n})\r\n\r\nexport const setCurrentItem = object => ({\r\n  type: SET_CURRENT_ITEM, \r\n  object\r\n})\r\n\r\nexport const sortColumn = text => ({\r\n  type:  SORT_COLUMN,\r\n  text\r\n})\r\n\r\nexport const setFilter = text => ({\r\n  type: SET_FILTER, \r\n  text\r\n})\r\n\r\nexport const setDarkMode = bool => ({\r\n  type: SET_DARK_MODE,\r\n  bool\r\n})\r\n\r\nexport const setDate = text => ({\r\n  type: SET_DATE,\r\n  text\r\n})","import styled from \"styled-components\"; \r\n\r\nexport const Body = styled.div`  \r\n  font-size: 1.6rem; \r\n  color: ${props => (props.darkMode\r\n    ? \"#d6d6d6\"\r\n    : \"#202020\")}; \r\n  min-width: 320px;\r\n  font-family: 'Open Sans', sans-serif; \r\n  background-color: ${props => (props.darkMode\r\n    ? \"#1c1c1c\" \r\n    : \"#f1f1f1\")}; \r\n  min-height: 100vh;\r\n  transition: background-color 0.3s;\r\n`\r\n\r\nexport const Header = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 30px 20px 0 20px; \r\n  transition: all 0.3s;\r\n  background-color: ${props => (props.darkMode\r\n    ? \"#363636\" \r\n    : \"white\")};   \r\n  box-shadow: ${props => (props.darkMode \r\n    ? \"none\"\r\n    : \"5px 5px 3px 2px rgba(173, 173, 173, 0.1)\")};  \r\n`\r\n\r\nexport const TableStyle = styled.table`\r\n  width: 100%;\r\n  margin-top: 20px;  \r\n  border-collapse: collapse;  \r\n  border-radius: 5px;\r\n  overflow: hidden; \r\n  box-shadow: ${props => (props.darkMode\r\n    ? \"none\"\r\n    : \"0px 0px 5px 2px rgba(129, 129, 129, 0.116)\")}; \r\n  background-color:  ${props => (props.darkMode\r\n    ? \"#363636\"\r\n    : \"white\")};   \r\n  transition: all 0.3s;\r\n\r\n  th { \r\n    text-align: left;\r\n    font-size: 1.5rem; \r\n  }\r\n\r\n  th:not(:last-of-type) { \r\n    overflow: auto; \r\n    width: calc((100% - 50px)/ 3);\r\n  }  \r\n\r\n  th:last-of-type { max-width: 70px; } \r\n\r\n  tr:not(:first-of-type) { border-top: 1px solid rgba(105, 105, 105, 0.158); }\r\n\r\n  th, td {padding: 15px;} \r\n\r\n  button { color: white;}\r\n\r\n  thead { \r\n    background-color: #252525; \r\n    color: #8c8eff;\r\n  } \r\n`\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: flex-end;  \r\n  margin-top: 10px;\r\n  padding: 10px 0;\r\n  max-height: ${props => (props.visible\r\n    ? \"500px\" \r\n    : \"0\")};\r\n  overflow: ${props => (props.visible\r\n      ? \"none\"\r\n      : \"hidden\")}; \r\n  transition: max-height 0.4s linear;\r\n  \r\n  input, select {\r\n    padding: 10px;\r\n    height: 45px; \r\n    margin-bottom: 10px; \r\n    max-width: 200px;\r\n    background-color:  ${props => (props.darkMode\r\n      ? \"#4d4d4d\"\r\n      : \"#f1f2fa\")};  \r\n    color:  ${props => (props.darkMode\r\n      ? \"#cfcfcf\"\r\n      : \"#6e6d86\")};  \r\n    transition: all 0.3s;\r\n  } \r\n\r\n  label {margin-top: 10px;}\r\n\r\n  div {\r\n    margin-right: 20px; \r\n    position: relative;  \r\n    overflow-y: auto;\r\n  } \r\n`\r\n\r\nexport const VisibilityFilters = styled.form` \r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  margin-top: 50px;  \r\n\r\n  select {\r\n    transition: all 0.3s;\r\n    color: ${props => (props.darkMode\r\n      ? \"#cfcfcf\"\r\n      : \"#6e6d86\")}; \r\n    background-color: ${props => (props.darkMode\r\n      ? \"#4d4d4d\"\r\n      : \"white\")}; \r\n    padding: 5px; \r\n  }\r\n\r\n  select + svg { \r\n    bottom: 7px; \r\n  }\r\n\r\n  div:nth-of-type(2) {margin-left: 20px;}\r\n    \r\n  select:nth-of-type(2) {\r\n    width: 180px;    \r\n  }  \r\n\r\n  .dateRange {\r\n    background-color: transparent;\r\n    font-size: 2rem;  \r\n    width: 200px;\r\n    border-bottom: ${props => (props.darkMode\r\n      ? \"1px solid white\"\r\n      : \"1px solid black\")};  \r\n  }  \r\n  \r\n  .field {\r\n    position: relative;\r\n    display: inline-block;\r\n  }\r\n`\r\n\r\nexport const Toggle = styled.button` \r\n  position: relative;\r\n  height: 30px;\r\n  width: 62px;\r\n  background-color: #252525;\r\n  border: 1px solid white; \r\n  border-radius: 25px;  \r\n  color: white;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 9px;\r\n  \r\n  svg {\r\n    transform: scale(1.2);\r\n  }\r\n  \r\n  &::after {\r\n    content: '';\r\n    height: 20px;\r\n    width: 20px; \r\n    background-color: grey;\r\n    border-radius: 50%; \r\n    position: absolute; \r\n    right: 5px;\r\n    transition: all 0.2s;\r\n  }\r\n  ` \r\n\r\nexport const Button = styled.button`\r\n  text-transform: uppercase;\r\n  background-color: #676aff; \r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 5px 15px;\r\n  font-weight: 300;\r\n  margin-right: 20px;\r\n  font-size: 1.4rem;\r\n  transition: all 0.3s;\r\n\r\n  &:hover,\r\n  &:focus { background-color: #8c8fff; }\r\n`","import React, { useState } from 'react';  \r\nimport { connect } from 'react-redux';\r\nimport { Categories } from './helpers';\r\nimport { addItem, setCurrentItem } from '../redux/actions';  \r\nimport { Form } from './styles';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\n\r\nconst mapStateToProps = (state) => ({ \r\n  current: state.currentItem,\r\n  darkMode: state.darkMode\r\n});\r\n\r\nconst AddItem = ({ darkMode, current, dispatch }) => { \r\n  const [isVisible, setVisibility] = useState(true);\r\n   // Keeps track of user's input, saving the input to its corresponding property in the list item object\r\n  const handleUserInput = (e) => {\r\n    const { id, value } = e.target;  \r\n    dispatch(setCurrentItem({ field: id, val: value })); \r\n  }      \r\n\r\n  const { type, name, price, date } = current;\r\n  return (\r\n    <div> \r\n      <Form \r\n        action=\"\"  \r\n        visible={isVisible}\r\n        darkMode={darkMode}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();  \r\n          dispatch(addItem(current));  \r\n        }} \r\n        onChange={handleUserInput} \r\n        >  \r\n        <div>\r\n          <label htmlFor=\"name\">Type</label>\r\n          <select \r\n            id=\"type\"\r\n            value={type}\r\n            required={true}\r\n            >\r\n            <option value=\"expense\">Expense</option> \r\n            <option value=\"income\">Income</option> \r\n          </select>\r\n          <ExpandMoreIcon />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"name\">Item</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"name\" \r\n            value={name}  \r\n            placeholder=\"Rent\" \r\n            required={true}\r\n          /> \r\n        </div>\r\n\r\n        <div> \r\n          <label htmlFor=\"category\">Category</label>\r\n          <select\r\n            id=\"category\" \r\n            value={type}\r\n            required={true}\r\n          >\r\n            {Categories.map((category, index)=> {\r\n              return (\r\n                <option key={index} value={category.category}>{category.category}</option>\r\n              )\r\n            })} \r\n          </select>\r\n          <ExpandMoreIcon />\r\n        </div> \r\n\r\n        <div>\r\n          <label htmlFor=\"price\">Price</label>\r\n          <input \r\n            type=\"number\" \r\n            step=\"0.01\" \r\n            min=\"0\" \r\n            id=\"price\" \r\n            value={price} \r\n            placeholder=\"1000.00\" \r\n            required={true}\r\n          /> \r\n        </div> \r\n        <div>\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input \r\n            type=\"date\" \r\n            id=\"date\"  \r\n            value={date} \r\n            required={true}\r\n          /> \r\n          <CalendarTodayIcon />\r\n        </div>\r\n        <button className=\"add\" type=\"submit\" aria-label=\"add item\">+</button>\r\n      </Form>\r\n      <button className=\"hide\" onClick={() => setVisibility(!isVisible)}>\r\n        {isVisible \r\n          ? \r\n          <>\r\n            <span>Hide</span>\r\n            <ExpandLessIcon /> \r\n          </>\r\n          : \r\n          <>\r\n            <span>Show</span>\r\n            <ExpandMoreIcon />\r\n          </>\r\n          }\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddItem)","import React from 'react'; \r\nimport { Categories } from './helpers';\r\nimport { VisibilityFilters } from './styles';\r\nimport { Months } from './helpers'; \r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst SelectFilter = ({ darkMode, setDate, sort, filter, dateRanges }) => ( \r\n  <> \r\n    <VisibilityFilters \r\n      action=\"\" \r\n      darkMode={darkMode}\r\n    >\r\n      <div className=\"field\">\r\n        {/* <label htmlFor=\"dateView\">Date</label> */}\r\n        <select \r\n          name=\"dateView\" \r\n          id=\"dateView\"\r\n          className=\"dateRange\"\r\n          onChange={(e) => setDate(e.target.value)}\r\n        >\r\n          {dateRanges.map((range, index) => { \r\n            return (\r\n              <option key={index} value={range.full}>{Months[range.month]} {range.year}</option>\r\n            )\r\n          })}\r\n        </select>\r\n        <ExpandMoreIcon />\r\n      </div>\r\n      <div className=\"fieldset\">\r\n        <div className=\"field\">\r\n          <label htmlFor=\"filter\">Show</label>\r\n          <select \r\n            name=\"filter\" \r\n            id=\"filter\"\r\n            onChange={(e) => filter(e.target.value)} \r\n          >\r\n            <option value=\"\">All</option>\r\n            {Categories.map((category, index) => {\r\n              return (\r\n                <option key={index} value={category.category}>{category.category}</option>\r\n              )\r\n            })} \r\n          </select>\r\n          <ExpandMoreIcon />\r\n        </div>\r\n        \r\n        <div className=\"field\">\r\n          <label htmlFor=\"sort\">Sort By</label>\r\n          <select \r\n            name=\"sort\" \r\n            id=\"sort\"\r\n            onChange={(e) => sort(e.target.value)}\r\n          >\r\n            <option value=\"date\">Most Recent</option>\r\n            <option value=\"name\">Alphabetical</option>\r\n            <option value=\"price\">Highest to Lowest</option>\r\n          </select>\r\n          <ExpandMoreIcon />\r\n        </div>\r\n      </div>\r\n    </VisibilityFilters> \r\n  </>\r\n) \r\n\r\nexport default SelectFilter","import { connect } from 'react-redux';\r\nimport { setFilter, sortColumn, setDate } from '../redux/actions'; \r\nimport SelectFilter from '../components/SelectFilter'; \r\n\r\nconst getDateRanges = (state) => {\r\n  const dates = state.items.map(item => item.date.slice(0, 7));\r\n  const unique = dates.filter((num, i) => dates.indexOf(num) === i);  \r\n  const ranges = unique.map(date => {\r\n    const month = parseInt(date.slice(5,7));\r\n    const year = date.slice(0,4);\r\n    return (\r\n      {\r\n        full: date,\r\n        month: month,\r\n        year: year\r\n      }\r\n    )\r\n  }) \r\n  return ranges\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ \r\n  darkMode: state.darkMode,\r\n  dateRanges: getDateRanges(state)\r\n}) \r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filter: selection => dispatch(setFilter(selection)),\r\n  sort: selection => dispatch(sortColumn(selection)),\r\n  setDate: date => dispatch(setDate(date))\r\n}) \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectFilter)","import React, { useState, useEffect } from 'react';   \r\nimport CheckIcon from '@material-ui/icons/Check'; \r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport { Categories } from './helpers'; \r\n\r\nconst Item = ({ onClick, dateString, name, category, price }) => { \r\n    const [checked, isChecked] = useState(false);\r\n    const [icon, setIcon] = useState(<AttachMoneyIcon />); \r\n\r\n    useEffect(()=>{ \r\n        const type = Categories.find(item => item.category === category)\r\n        setIcon(type.icon) \r\n    },[])\r\n    \r\n    return (\r\n        <tr>  \r\n            <td className=\"category\">\r\n                <div className=\"categoryIcon\">\r\n                    {icon}\r\n                </div>\r\n            </td>\r\n            <td className=\"itemCard\">\r\n                <span className=\"name\">{name}</span> \r\n                <span className=\"date\">{dateString}</span> \r\n            </td>  \r\n            <td className=\"price\">\r\n                {price < 0 ? \"- \" : \" \"}\r\n                ${Math.abs(price)}\r\n            </td>\r\n            <td> \r\n                <button \r\n                className=\"checkbox\" \r\n                aria-label=\"checkbox\" \r\n                    onClick={() => {\r\n                        onClick()\r\n                        isChecked(!checked)\r\n                    }}\r\n                >\r\n                    {checked ? <CheckIcon /> : null}\r\n                </button>\r\n            </td>\r\n        </tr> \r\n    )\r\n}\r\n\r\nexport default Item","import React, { useState } from 'react'; \r\nimport { connect } from 'react-redux';\r\nimport Item from './Item'; \r\nimport { TableStyle } from './styles';\r\n\r\nconst Table = ({ darkMode, items, deleteItem }) => {\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    // Removes or adds selection\r\n    const addSelected = (id) => {\r\n        if (selected.includes(id)) {\r\n            setSelected([...selected].filter(item => item !== id))\r\n        } else {\r\n            setSelected([...selected, id]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TableStyle darkMode={darkMode}> \r\n            <thead> \r\n                <tr>  \r\n                    <th></th>\r\n                    <th>Item </th> \r\n                    <th>Total</th>\r\n                    <th>\r\n                        <button \r\n                            className={selected.length > 0 ? \"deleteButton\" : \"hidden deleteButton\"}\r\n                            onClick={() => deleteItem(selected)}>\r\n                                Delete\r\n                        </button>\r\n\r\n\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>  \r\n                {items.length > 0 \r\n                    ? items.map((item) => { \r\n                        return (\r\n                            <Item \r\n                                key={item.id}\r\n                                {...item} \r\n                                onClick={() => addSelected(item.id)}\r\n                            />\r\n                        ) \r\n                    })\r\n                    : <tr>\r\n                        <td></td>\r\n                        <td>No results to show</td>\r\n                      </tr>\r\n                } \r\n            </tbody>\r\n        </TableStyle>  \r\n    )\r\n}\r\n\r\nexport default connect()(Table)","import { connect } from 'react-redux';\r\nimport { deleteItem } from '../redux/actions.js';\r\nimport Table from '../components/Table';\r\n\r\nconst getList = (items, filter, sort, date) => { \r\n  let list = [...items].filter(item => item.date.includes(date));\r\n  let sorted = list.sort((a, b) => {\r\n      if (b[sort.column] > a[sort.column]) {\r\n            return 1;\r\n      } else if (b[sort.column] < a[sort.column]) {\r\n          return -1;\r\n      }\r\n      return 0;\r\n  });\r\n\r\n  if (sort.direction) {\r\n    sorted.reverse();\r\n  }\r\n\r\n  if (filter !== \"\") { \r\n    return sorted.filter(item => filter === item.category);\r\n  } else { \r\n    return sorted;\r\n  } \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: getList(state.items, state.filterBy, state.sorting, state.dateRange),\r\n  darkMode: state.darkMode \r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteItem: id => dispatch(deleteItem(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst calculateSum = data => {\r\n  const values = data.map(item => item.price);\r\n  return values.reduce((a, b) => a + b);\r\n}\r\n\r\nconst mapStateToProps = state => ({ \r\n  total: calculateSum(state.items)\r\n})\r\n\r\nconst Balance = ({ total }) => (\r\n  <div className=\"summary\">\r\n    <h2>Balance</h2>\r\n    <p className=\"balance\">\r\n      {total < 0 ? \"- \" : \" \"}\r\n      <span>${Math.abs(total)}</span> CAD\r\n    </p>\r\n  </div>\r\n) \r\n\r\nexport default connect(mapStateToProps)(Balance); ","import React from 'react';  \r\nimport { connect } from 'react-redux';\r\nimport { setDarkMode } from './redux/actions';  \r\nimport AddItem from './components/AddItem';\r\nimport Filter from './containers/Filter';\r\nimport List from './containers/List';  \r\nimport Balance from './components/Balance'; \r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\r\nimport { Body, Header, Toggle, Button } from './components/styles';\r\nimport './App.css'; \r\n\r\nconst mapStateToProps = (state) => ({ darkMode: state.darkMode });\r\n\r\nconst App = ({ darkMode, dispatch }) => (\r\n  <Body darkMode={darkMode}>\r\n    <Header darkMode={darkMode}>  \r\n      <div className=\"headerBar\">\r\n        <Button>Log In</Button>\r\n        <Toggle\r\n          className={darkMode ? \"move\" : null}\r\n          aria-label=\"Toggle light and dark mode\"\r\n          onClick={() => dispatch(setDarkMode())}\r\n        >\r\n          <WbSunnyIcon />  \r\n          <Brightness2Icon />\r\n        </Toggle> \r\n      </div>\r\n      <h1>Personal Spending Tracker</h1> \r\n      <Balance />\r\n      <AddItem />\r\n    </Header>\r\n    <main className=\"wrapper\">     \r\n      <Filter />  \r\n      <List /> \r\n    </main>\r\n  </Body>\r\n)\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport App from './App'\r\nimport './index.css';\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n)\r\n"],"sourceRoot":""}